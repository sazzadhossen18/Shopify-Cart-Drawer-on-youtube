 window.theme = window.theme || {};

theme.formatCurrency = (cents, format) => {
  if (typeof cents == 'string') { cents = cents.replace('.',''); }
  var value = '';
  var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
  var formatString = (format || this.money_format);

  function defaultOption(opt, def) {
     return (typeof opt == 'undefined' ? def : opt);
  }

  function formatWithDelimiters(number, precision, thousands, decimal) {
    precision = defaultOption(precision, 2);
    thousands = defaultOption(thousands, ',');
    decimal   = defaultOption(decimal, '.');

    if (isNaN(number) || number == null) { return 0; }

    number = (number/100.0).toFixed(precision);

    var parts   = number.split('.'),
        dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
        cents   = parts[1] ? (decimal + parts[1]) : '';

    return dollars + cents;
  }

  switch(formatString.match(placeholderRegex)[1]) {
    case 'amount':
      value = formatWithDelimiters(cents, 2);
      break;
    case 'amount_no_decimals':
      value = formatWithDelimiters(cents, 0);
      break;
    case 'amount_with_comma_separator':
      value = formatWithDelimiters(cents, 2, '.', ',');
      break;
    case 'amount_no_decimals_with_comma_separator':
      value = formatWithDelimiters(cents, 0, '.', ',');
      break;
  }

  return formatString.replace(placeholderRegex, value);
};

theme.getCart = async (type = 'success') => {
	let cartItems = '';
	if(type == 'success') {
		const req = await fetch('/cart.json', {
			method: "GET",
			headers: {
				"Content-type": "application/json"
			}
		});
		const { items } = await req.json();

		cartItems = `<div class="cartPopupItem">
			<div calss="cartPopupProductImage"><img src="${ items[0].featured_image.url }"></div>
			<div class="cartPopupProductInfo">
				<div class="cartPopupProductTitle">${ items[0].title }</div>
				<div class="cartPopupProductPrice">${ items[0].quantity } x ${ theme.formatCurrency(items[0].price, theme.moneyFormat) }</div>
				</div>
				</div>`
			} else {
				cartItems = `<div class="cartPopupItem">
				<div class="cartPopupProductInfo">
				<div class="cartPopupProductTitle">${ type }</div>
				<div class="cartPopupProductPrice">Something Happmed Please try Again after sometime.</div>
			</div>
		</div>`
	}

	const cartPopup = `<div class="cartPopup">
		<div class="cartPopupBody">${ cartItems }</div>
		${ type == 'success' ?
			`<div cartPopupFooter>
				<a href="{{ routes.cart_url }}" class="siteBtn black-bt">View Cart</a>
			</div>`
		: '' }
	</div>`;

	jQuery('body').prepend(cartPopup);

	setTimeout(function() {
		jQuery(document).find('.cartPopup').remove();
	}, 3000)
}

theme.addToCart = async (items) => {
	const req = await fetch('/cart/add.json', {
		method: "POST",
		headers: {
			"Content-type": "application/json"
		},
		body: JSON.stringify(items)
	});
	const res = await req.json();

	if(res.errors) {
		theme.getCart(res.errors)
	} else {
		theme.getCart('success')
	}
}

theme.addToCartDrawer = async (items) => {
  const req = await fetch('/cart/add.json', {
      method: "POST",
      headers: {
          "Content-type": "application/json"
      },
      body: JSON.stringify(items)
  });
  const res = await req.json();

  const cartReq = await fetch('/cart?view=ajax')
  const cartRes = await cartReq.text();
  
  console.info(jQuery(document).find('.cartPopup').length);
  if(jQuery(document).find('.cartPopup').length > 0) {
      jQuery(document).find('.cartPopup').html(`<div class="cartPopupClose">x<div class="cartheading">Votre panier</div></div>${ cartRes }`)
  } else {
      const cartPopup = `<div class="cartPopup cartPopupDrawer">
          <div class="cartPopupClose">X</div>
          <div class="cartPopupBody">${ cartRes }</div>
      </div>`;
      jQuery('body').prepend(cartPopup);
  }
  jQuery(document).find('.cartPopup').addClass('cartPopupDrawerOpen')
}
  
jQuery(document).on('submit', '.addToCartForm', async function(e) {
    let itemProperties = {};
    let apoOptions = $('form[action$="/cart/add"]:first').serializeArray();
    for (let apoOption of apoOptions) {
      if (!apoOption.name.includes('properties')) continue;
      
      let optionKey = apoOption.name.split('properties')[1].replace('[','').replace(']','');
      let optionValue = apoOption.value;
      itemProperties[optionKey] = optionValue;
    }
		if(jQuery(this).data('ajax') == "notification" || jQuery(this).data('ajax') == "drawer") {
			e.preventDefault();
			const formData = {
				"items": [
					{
						"id": jQuery(this).find('[name="id"]').val(),
						"quantity": jQuery(this).find('input[name="quantity"]').val(),
                        "properties": itemProperties
					}
				]
			}
         
			if(jQuery(this).data('ajax') == "notification") {
				theme.addToCartDrawer(formData)
			} else {
              theme.addToCartDrawer(formData)
  
			}
		} else {
			jQuery(this).submit();     
		};



	})







    jQuery(document).on('click', '.cartPopupClose', function() {
		jQuery(this).parents('.cartPopup').removeClass('cartPopupDrawerOpen')
	})
  
jQuery(document).on('change', '.cartFormWrapper select', async function() {
  

			const req = await fetch('/cart/change.json', {
				method: "POST",
				headers: {
					"Content-type": "application/json"
				},
				body: JSON.stringify({
					"id": `${jQuery(this).data('key')}`,
					"quantity": jQuery(this).val()
				})
			})
			const res = await req.json();

			const cartReq = await fetch('/cart?view=ajax')
			const cartRes = await cartReq.text();
			if(window.location.pathname == '/cart') {
				jQuery(this).parents('.shopify-section').html(`${ cartRes }`)
			} else {
				jQuery(document).find('.cartPopup').html(`<div class="cartPopupClose">x</div>${ cartRes }`)
			}

  
          
            const cartJsReq = await fetch('/cart.json')
            const { item_count } = await cartJsReq.json()
            console.log(item_count)
            jQuery('[data-header-cart-count]').attr('data-header-cart-count', item_count)
		
	})


jQuery(document).on('click', '.cartFormWrapper .remove', async function(e) {
		e.preventDefault();
			const req = await fetch('/cart/change.json', {
				method: "POST",
				headers: {
					"Content-type": "application/json"
				},
				body: JSON.stringify({
					"id": `${jQuery(this).data('key')}`,
					"quantity": 0
				})
			})
      
			const res = await req.json();


  
		const cartReq = await fetch('/cart?view=ajax')
			const cartRes = await cartReq.text();
			if(window.location.pathname == '/cart') {
				jQuery(this).parents('.shopify-section').html(`${ cartRes }`)
			} else {
				jQuery(document).find('.cartPopup').html(`<div class="cartPopupClose">x</div>${ cartRes }`)
			}
          
            const cartJsReq = await fetch('/cart.json')
            const { item_count } = await cartJsReq.json()
            console.log(item_count)
            jQuery('[data-header-cart-count]').attr('data-header-cart-count', item_count)
	
	})


 jQuery('.site-header__cart[date-fillter="drawer"]').on('click', async function(e) {
    e.preventDefault();
    console.log(e)
    if(jQuery('.cartPopupDrawer').length > 0) {
      jQuery(document).find('.cartPopup').addClass('cartPopupDrawerOpen')
    } else {
      const cartReq = await fetch('/cart?view=ajax')
      const cartRes = await cartReq.text();

      if (jQuery(document).find('.cartPopup').length > 0) {
        jQuery(document).find('.cartPopup').html(`<div class="cartPopupClose">x</div> ${cartRes}`)
      } else {
        const cartPopup = `<div class="cartPopup cartPopupDrawer">
			<div class="cartPopupClose">x</div>
			<div class="cartPopupBody">${cartRes}</div>
		</div>`;
        jQuery('body').prepend(cartPopup);
      }

      jQuery(document).find('.cartPopup').addClass('cartPopupDrawerOpen')
    }
  })

  
  
